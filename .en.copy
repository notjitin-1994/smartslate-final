# Neon Auth environment variables for Next.js
NEXT_PUBLIC_STACK_PROJECT_ID='ee849f61-373a-4153-9c6c-49c30a82095b'
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY='pck_w1kcd4v6ws20m0vy996zpearawxgdf6yj8h1qtx83rt8r'
STACK_SECRET_SERVER_KEY='sk_7jq5m7v3yvw59azjc28a6eav4pdh8bz3s3qac23jw3fhr'

# Database
DATABASE_URL=postgresql://neondb_owner:npg_NMtXmsCv7dS1@ep-divine-sun-a1wnrt16-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require

# Neon Auth
NEON_AUTH_JWKS_URL='https://api.stack-auth.com/api/v1/projects/ee849f61-373a-4153-9c6c-49c30a82095b/.well-known/jwks.json'

# Other required secrets
NEON_API_KEY='napi_gr4hz2gby1v0zoqnuacy0rn3qs7hq5dq78brjrekd25strza03nhbg3lg222s2w8'
NEON_PROJECT_ID='autumn-cake-77878216'

Vtvt@1234567890!!@

## Supabase
# Your Supabase project URL (used to auto-discover JWKS):
SUPABASE_URL="https://oyjslszrygcajdpwgxbe.supabase.co"
# Supabase service role secret (server-only; do not expose to client):
# SUPABASE_SERVICE_ROLE_KEY="your_service_role_key"
# Optional explicit JWKS URL (override auto-discovery):
# SUPABASE_JWKS_URL="https://YOUR_PROJECT_REF.supabase.co/auth/v1/keys"

## Database (Supabase Postgres)
# Use pooled connection for Prisma client at runtime (via pgBouncer):
# DATABASE_URL="postgresql://postgres:YOUR_PASSWORD@db.YOUR_PROJECT_REF.supabase.co:6543/postgres?pgbouncer=true&connection_limit=1"
# Use direct connection for migrations and long-running queries:
# DIRECT_URL="postgresql://postgres:YOUR_PASSWORD@db.YOUR_PROJECT_REF.supabase.co:5432/postgres"

## JWT secret (local/testing fallback)
# JWT_SECRET="replace-with-strong-secret"

## Node Environment
NODE_ENV="development"

## Optional canonical host enforcement (set in production only if needed)
# Example: smartslate.io OR www.smartslate.io
CANONICAL_HOST="www.smartslate.io"
